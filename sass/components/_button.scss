
.btn {
    &,
    &:link, 
    &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    font-size: $default-font-size;

    /* transition time on all properties on initial state */
    transition: all .2s;

    /* set to relative to enable ::after class to use absolute from this parent */
    position: relative;
    }


    //CHANGES MADE FOR THE <button> element
    border: none;
    cursor: pointer;


    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,.2);


        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    
    &:focus,
    &:active {
        outline: none;
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }
    
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;
        
        &::after {
            background-color: $color-white;
        }
        
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;
        
        &::after {
            background-color: $color-primary;
        }
    }
    
    
    /* EXPLODING BUTTON HAPPENS HERE USING ::AFTER */
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
    
        /*absolute from nearest relative parent*/
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
    
        /* lets following code be animated for all characteristics and sets time*/
        transition: all .4s;
    }
    
    
    &--animated {
        animation:moveInBottom .5s ease-out .8s;
        /* automatically applys styles of 0% before animation starts */
        animation-fill-mode: backwards;
    }
}


.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: .3rem;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black,.15);
        transform: translateY(-.2rem);
    }

    &:active {
        box-shadow: 0 1rem .5rem rgba($color-black,.15);
        transform: translateY(0);
    }
}